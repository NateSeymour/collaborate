/*
 * Generated by the protocol buffer compiler.  DO NOT EDIT! 
 */
/*
 * Generated from: Pointer.proto 
 */

#ifndef PROTOBUF_C_Pointer_2eproto__INCLUDED
#define PROTOBUF_C_Pointer_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS
#if PROTOBUF_C_VERSION_NUMBER < 1003000
#error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
#error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif
#include "CommonTypes.pb-c.h"
typedef struct Pointer Pointer;
typedef struct PointerCollection PointerCollection;

/*
 * --- enums --- 
 */

/*
 * --- messages --- 
 */

struct Pointer {
	ProtobufCMessage base;
	PointerType pointertype;
	Coordinates *coordinates;
};
#define POINTER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&pointer__descriptor) \
, POINTER_TYPE__POINTER_TYPE_UNSPECIFIED, NULL }

struct PointerCollection {
	ProtobufCMessage base;
	size_t n_pointers;
	Pointer **pointers;
};
#define POINTER_COLLECTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&pointer_collection__descriptor) \
, 0,NULL }

/*
 * Pointer methods 
 */
void pointer__init(Pointer * message);
size_t pointer__get_packed_size(const Pointer * message);
size_t pointer__pack(const Pointer * message, uint8_t * out);
size_t pointer__pack_to_buffer
    (const Pointer * message, ProtobufCBuffer * buffer);
Pointer *pointer__unpack
    (ProtobufCAllocator * allocator, size_t len, const uint8_t * data);
void pointer__free_unpacked(Pointer * message, ProtobufCAllocator * allocator);
/*
 * PointerCollection methods 
 */
void pointer_collection__init(PointerCollection * message);
size_t pointer_collection__get_packed_size(const PointerCollection * message);
size_t pointer_collection__pack(const PointerCollection * message,
				uint8_t * out);
size_t pointer_collection__pack_to_buffer(const PointerCollection *
					  message, ProtobufCBuffer * buffer);
PointerCollection *pointer_collection__unpack(ProtobufCAllocator *
					      allocator, size_t len,
					      const uint8_t * data);
void pointer_collection__free_unpacked(PointerCollection * message,
				       ProtobufCAllocator * allocator);
/*
 * --- per-message closures --- 
 */

typedef void (*Pointer_Closure)(const Pointer * message, void *closure_data);
typedef void (*PointerCollection_Closure)
 (const PointerCollection * message, void *closure_data);

/*
 * --- services --- 
 */

/*
 * --- descriptors --- 
 */

extern const ProtobufCMessageDescriptor pointer__descriptor;
extern const ProtobufCMessageDescriptor pointer_collection__descriptor;

PROTOBUF_C__END_DECLS
#endif				/* PROTOBUF_C_Pointer_2eproto__INCLUDED */
